ВАЖНО - это Паттерн уровня классов
Данный паттерн - фендамент для все остальных порождающих паттернов

Правило - если архитектор не знает какой применить паттерн для порождения объектов - всегда исползовать фабричный метод, т.к. данный паттерн легко транформируется в любой 
	из остальных порождающих паттернов

	Назначение - быть основой для всех порождающих паттернов


Когда надо применять паттерн:
	- Когда заранее неизвестно, объекты каких типов необходимо создавать
	- Когда система должна быть независимой от процесса создания новых объектов и расширяемой: в нее можно легко вводить новые классы, объекты которых система должна создавать.
	- Когда создание новых объектов необходимо делегировать из базового класса классам наследникам

Участники
	- Абстрактный класс Product определяет интерфейс класса, объекты которого надо создавать.
	- Конкретные классы ConcreteProduct1 и ConcreteProduct2 представляют реализацию класса Product. Таких классов может быть множество
	- Абстрактный класс Creator определяет абстрактный фабричный метод FactoryMethod(), который возвращает объект Product.
	- Конкретные классы ConcreteCreatorA и ConcreteCreatorB - наследники класса Creator, определяющие свою реализацию метода FactoryMethod(). Причем метод FactoryMethod() каждого отдельного класса-создателя возвращает определенный конкретный тип продукта. Для каждого конкретного класса продукта определяется свой конкретный класс создателя.
	- Таким образом, класс Creator делегирует создание объекта Product своим наследникам. А классы ConcreteCreatorA и ConcreteCreatorB могут самостоятельно выбирать какой конкретный тип продукта им создавать.